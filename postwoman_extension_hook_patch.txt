
import { fetch } from "@tauri-apps/plugin-http"

declare global {
  interface Window {
    __TAURI__?: any,
  }
}

console.info(`executing extension strategy`)
if (window.__TAURI__ && window.__TAURI__.http) {
  console.info(`injected tauri extension strategy`)
  window.__POSTWOMAN_EXTENSION_HOOK__ = {
    cancelRequest: () => {},
    sendRequest: async ({
      url,
      method,
      headers,
      params,
      data,
    }: any): Promise<any> => {
      try {
        let body = data
        if(method === 'GET' || method === 'HEAD') {
          body = null
        }
        const startTime = Date.now()
        const response = await fetch(url, {
          method,
          headers,
          body,
        })
        const endTime = Date.now()
        const responseData = await response.arrayBuffer()
        const { headers: responseHeaders, status, statusText } = response
        console.info(`tauri fetch response`, response)
        return {
          ...response,
          headers: Object.fromEntries(responseHeaders.entries()),
          status,
          statusText,
          data: responseData,
          config: {
            timeData: {
              startTime,
              endTime,
            }
          },
        }
      } catch (error) {
        console.info(`tauri fetch got error: `, error)
        return {
          headers: {},
          status: 500,
          statusText: "",
          data: new TextEncoder().encode(`tauri fetch got error: ${error}`),
          config: {},
        }
      }
    },
    getVersion: () => ({ major: 0, minor: 1, patch: 0 }),
  }
}
